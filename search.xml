<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Linux-002. bash提示符设置 - PS1变量用法]]></title>
    <url>%2F2019%2F01%2F06%2Flinux2%2F</url>
    <content type="text"><![CDATA[当每次在Linux中使用回车执行命令之后，都会回到最开始的提示字符处，这个过程就是取用了set命令下自定义变量PS1的值。 基本格式12[cadmin@localhost ~]$ echo $PS1[\u@\h \W]\$ 此处的[\u@\h \W]\$就是[cadmin@localhost ~]$的通用格式，通过修改PS1变量可以达到修改提示字符的目的。在这之前，需要先了解此处用的符号含义： \d ：代表日期，格式为weekday month date，例如：”Mon Aug 1”\H ：完整的主机名称，在此处为localhost.localdomain\h ：仅取主机名中的第一个名字，在此处为localhost\t ：显示时间为24小时格式『HH:MM:SS』\T ：显示时间为12小时格式『HH:MM:SS』\A ：显示时间为24小时格式『HH:MM』\@：显示时间为12小时格式『AM/PM』\u ：当前用户的账号名称，此处为cadmin\v ：BASH的版本信息\w ：完整的工作目录名称\W ：利用basename取得工作目录名称，只显示最后一个目录名\# ：下达的第几个命令\\$ ：提示字符，如果是root用户，提示符为 # ，普通用户则为 \$ 经过调整，自己最习惯的排列方式为\u @ \h:\w\$ 颜色格式PS1中的颜色参数格式为\[\e[F;Bm\]，F代表文本前景色，B代表背景色，这一串参数的位置就是这个颜色开始生效的位置，且后出现的颜色参数会覆盖前面的颜色参数。例如\[\033[01;32m\]\u @ \h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$赋值给PS1后，提示字符变成：最终，自己最习惯的排列加上比较醒目的格式是：\[\033[01;32m\]\u @ \h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ 永久生效在当前shell里面的修改都只是暂时性的，只有将对应变量的赋值加入到对应用户的.bashrc下，才能在启动时就生效。（建议不要加到/etc/profile中，会对全部用户生效）12cadmin @ localhost:~$cd # 进入对应用户家目录vi .bashrc # 编辑.bashrc 在文件最后加上PS1=&quot;\[\033[01;32m\]\u @ \h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$&quot;，然后source .bashrc即可。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux-001. 变量]]></title>
    <url>%2F2019%2F01%2F06%2Flinux1%2F</url>
    <content type="text"><![CDATA[目录 设置变量 删除变量 环境变量 自定义变量 特殊变量 自定义变量转化为环境变量 export 环境变量转化为自定义变量和宣告变量类型 declare 语系变量 交互设置变量 read 判断变量是否存在（变量引用） 在Linux Shell中，变量的作用和其他语言一样，可以方便脚本中的引用，灵活性是它的一个重要特点。同时，Linux的变量在引用的时候，可以内置部分表达式，让引用变得更加多元化。 设置变量Linux Shell中使用‘=’来赋值给变量。1username=MyID 如果赋的值中含有空格键，则需要带上双引号（””）或单引号（’’）。1username="Blue Sky" 变量设置规则 赋值时等号和变量名、值之间禁止使用空格。 变量名不能用数字开头。 如果值中间没有\$ ` \但有其他特殊字符，则可以使用双引号弱引用，如果值中间含有上述\$ ` \字符，则必须使用单引号强引用。 使用``或者\$()可以将命令执行结果赋值给变量。version=$(uname -r) 变量增添内容可以用直接引用拼接来完成： PATH=$PATH:/app export命令能使变量变成环境变量 删除变量 Linux Shell中使用unset命令来从内存空间中删除变量。1unset variant_name 变量引用表达式：除了从内存空间中删除变量之外，还可以利用通配符和”#”、”%”在引用变量的时候，只截取部分需要的内容。如果需要删除变量中部分字符串，可以使用下列表达式： 表达式 作用 ${variant#expression} 在variant变量中从头向后寻找符合expression的最短字符串，删掉 ${variant##expression} 在variant变量中从头向后寻找符合expression的最长字符串，删掉 ${variant%expression} 在variant变量中从后往前寻找符合expression的最短字符串，删掉 ${variant%%expression} 在variant变量中从后往前寻找符合expression的最长字符串，删掉 ${variant/old_str/new_str} 把在variant变量中找到的第一个old_str替换成new_str ${variant//old_str/new_str} 把在variant变量中找到的所有old_str替换成new_str 在表达式expression中，可以使用*来表示0到多个任意字符。 环境变量可以使用env/printenv/export查看当前shell环境下的所有环境变量。 env和printenv直接输出环境变量的键值对，以key=value的形式表现，export则是输出变量的声明类型，键值对，更全面。 123456789101112131415161718192021222324252627282930313233343536373839404142434445# 使用printenv或env[cadmin@localhost ~]$ printenvHOSTNAME=localhost.localdomainTERM=xtermSHELL=/bin/bashHISTSIZE=1000SSH_CLIENT=192.168.219.1 52858 22SELINUX_USE_CURRENT_RANGE=SSH_TTY=/dev/pts/0USER=cadminMAIL=/var/spool/mail/cadminPATH=/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/cadmin/.local/bin:/home/cadmin/binPWD=/home/cadminLANG=en_US.UTF-8SELINUX_LEVEL_REQUESTED=HISTCONTROL=ignoredupsSHLVL=1HOME=/home/cadminLOGNAME=cadminLESSOPEN=||/usr/bin/lesspipe.sh %sXDG_RUNTIME_DIR=/run/user/1000_=/usr/bin/printenv# 使用exportdeclare -x CLASSPATH=".:/usr/lib/java/jdk/lib:/usr/lib/java/jdk/jre/lib"declare -x HOME="/home/cadmin"declare -x JAVA_HOME="/usr/lib/java/jdk"declare -x JRE_HOME="/usr/lib/java/jdk/jre"declare -x LANG="en_US.UTF-8"declare -x LESSCLOSE="/usr/bin/lesspipe %s %s"declare -x LESSOPEN="| /usr/bin/lesspipe %s"declare -x LOGNAME="cadmin"declare -x MAIL="/var/mail/cadmin"declare -x OLDPWDdeclare -x PATH="/app/miniconda2/bin:/usr/lib/java/jdk/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/app/scraper"declare -x PWD="/home/cadmin"declare -x SCRAPER_CONFIG_FILE="config_ubuntu_prod.py"declare -x SCRAPER_ENV="prod"declare -x SHELL="/bin/bash"declare -x SHLVL="1"declare -x SSH_TTY="/dev/pts/0"declare -x TERM="xterm"declare -x USER="cadmin"declare -x XDG_RUNTIME_DIR="/run/user/1000"declare -x XDG_SESSION_ID="6813" 部分默认环境变量： HOSTNAME: 本主机的主机名TERM: 终端使用环境类型，xterm代表终端，putty/terminator代表终端模拟器SHELL: 当前终端使用的shell程序HISTSIZE: history的条目数量，CentOS默认1000USER: 使用者名MAIL: 用户mailbox位置PATH: 执行文件搜索目录及顺序PWD: 当前工作目录LANG: 语系HOME: 家目录 自定义变量可以使用set命令查看当前shell环境下所有环境变量和自定义变量。123456789[cadmin@localhost ~]$ setIFS=$' \t\n'LINES=56MAILCHECK=60OLDPWD=/homeOSTYPE=linux-gnuPPID=6764PS1='[\u@\h \W]\$ 'PS2='&gt; ' 部分重要自定义变量： IFS: 预设分隔符LINES: 终端最大行数MAILCHECK: 扫描新邮件的频率，单位为秒OLDPWD: 上一个工作路径，”cd -“就是取用了这个变量OSTYPE: 操作系统类型PPID: 父程序PS1: 命令提示字符格式，常用 - PS1设置详述PS2: 在shell中使用\在下一行继续输入命令时，下一行的提示字符 特殊变量 变量 含义 $ 代表当前shell的PID，可以用echo $$查看 ? 代表上一个命令的返回值，如果错误则为错误代码，如果正确返回0，在管道符中经常使用 自定义变量转化为环境变量 export自定义变量和环境变量首先让我们明确自定义变量和环境变量的区别：自定义变量仅能在当前bash中使用，环境变量可以在子程序的bash中使用。这里的子程序bash是指由父程序bash触发的另一个bash，子程序并不会继承父程序的自定义变量，只能继承环境变量。使用export 变量名称即可把自定义变量转化成环境变量。使用export会显示所有可用环境变量，并且都是以declare命令的形式表示变量的类型，变量名和值。 环境变量转化为自定义变量和宣告变量类型 declare默认情况下，Linux会将变量定义为字符串类型，如果变量需要为数值类型等，则需要使用declare来声明。 可选参数 作用 -a 将变量定义为array类型 -i 将变量定义为int类型。特别的，bash环境中的数值运算只能到整数，比如1/4=0 -x 将变量变为环境变量 -r 将变量定义为readonly类型 +x 将变量从环境变量变为自定义变量 语系变量语系变量会影响shell中的显示方式，如果语系使用不同，可能会造成输出乱码。12345678910111213LANG=en_US.UTF-8LC_CTYPE="en_US.UTF-8"LC_NUMERIC="en_US.UTF-8"LC_TIME="en_US.UTF-8"LC_COLLATE="en_US.UTF-8"LC_MONETARY="en_US.UTF-8"LC_MESSAGES="en_US.UTF-8"LC_PAPER="en_US.UTF-8"LC_NAME="en_US.UTF-8"LC_ADDRESS="en_US.UTF-8"LC_TELEPHONE="en_US.UTF-8"LC_MEASUREMENT="en_US.UTF-8"LC_IDENTIFICATION="en_US.UTF-8" 交互设置变量 read使用read命令可以等待用户输入变量的值，然后赋给变量名。 可选参数 作用 -p 输入提示符 123456[cadmin@localhost ~]$ read uname_testaaa # 输入要赋的值[cadmin@localhost ~]$ echo $uname_testaaa[cadmin@localhost ~]$ read -p "Please input:"Please input:aaa 判断变量是否存在（变量引用）可以使用${variant-default}来判断该变量是否存在。 variant不存在时，此表达式返回default值； variant为空或有值时，此表达式返回variant值。 如果此表达式改为${variant:-default}，则【variant为空值】也被视为【variant不存在】，即表达式的返回值也为default值。 如果此表达式改为${variant?error_expr}，则当variant不存在时，error_expr会进入stderr。同样，如果variant改为variant:，则variant为空时error_expr也会进入stderr。]]></content>
      <categories>
        <category>Linux</category>
      </categories>
  </entry>
</search>
